// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`automatically interpret push to next entry as a kind === "next": {"type":"SECOND"} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "next",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "SECOND",
}
`;

exports[`automatically interpret push to next entry as a kind === "next": {"type":"SECOND"} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`automatically interpret push to next entry as a kind === "next": {"type":"SECOND"} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`automatically interpret push to next entry as a kind === "next": {"type":"SECOND"} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "next",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`automatically interpret push to next entry as a kind === "next": {"type":"SECOND"} - title 1`] = `"SECOND"`;

exports[`automatically interpret push to previous entry as a kind === "back": {"type":"FIRST"} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`automatically interpret push to previous entry as a kind === "back": {"type":"FIRST"} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`automatically interpret push to previous entry as a kind === "back": {"type":"FIRST"} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`automatically interpret push to previous entry as a kind === "back": {"type":"FIRST"} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`automatically interpret push to previous entry as a kind === "back": {"type":"FIRST"} - title 1`] = `"FIRST"`;

exports[`automatically interpret replace to next entry as a kind === "next": {"type":"SECOND","location":{"status":302,"kind":"replace"}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "index": 1,
    "key": "345678",
    "kind": "next",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "scene": "",
    "search": "",
    "status": 302,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "SECOND",
}
`;

exports[`automatically interpret replace to next entry as a kind === "next": {"type":"SECOND","location":{"status":302,"kind":"replace"}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`automatically interpret replace to next entry as a kind === "next": {"type":"SECOND","location":{"status":302,"kind":"replace"}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`automatically interpret replace to next entry as a kind === "next": {"type":"SECOND","location":{"status":302,"kind":"replace"}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "next",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 302,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`automatically interpret replace to next entry as a kind === "next": {"type":"SECOND","location":{"status":302,"kind":"replace"}} - title 1`] = `"SECOND"`;

exports[`automatically interpret replace to previous entry as a kind === "back": {"type":"FIRST","location":{"status":302,"kind":"replace"}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 302,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`automatically interpret replace to previous entry as a kind === "back": {"type":"FIRST","location":{"status":302,"kind":"replace"}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`automatically interpret replace to previous entry as a kind === "back": {"type":"FIRST","location":{"status":302,"kind":"replace"}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`automatically interpret replace to previous entry as a kind === "back": {"type":"FIRST","location":{"status":302,"kind":"replace"}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 302,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`automatically interpret replace to previous entry as a kind === "back": {"type":"FIRST","location":{"status":302,"kind":"replace"}} - title 1`] = `"FIRST"`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[{"foo":"bar"}]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "foo": "bar",
  },
  "type": "FIRST",
}
`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[{"foo":"bar"}]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[{"foo":"bar"}]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[{"foo":"bar"}]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "foo": "bar",
    },
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[{"foo":"bar"}]}} - title 1`] = `"FIRST"`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[null]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
          "more": "state",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "yo": "dog",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "yo": "dog",
      },
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "foo": "bar",
    "more": "state",
  },
  "type": "FIRST",
}
`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[null]}} - response 2`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
          "more": "state",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "bla": "sdf",
          "yo": "dog",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "bla": "sdf",
        "yo": "dog",
      },
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "foo": "bar",
    "more": "state",
  },
  "type": "FIRST",
}
`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[null]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[null]}} - routes - NEVER_USED_PATHLESS - thunk 2`] = `0`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[null]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[null]}} - routes - REDIRECTED - onComplete 2`] = `0`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[null]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
          "more": "state",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "yo": "dog",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "yo": "dog",
      },
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "foo": "bar",
      "more": "state",
    },
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[null]}} - state 2`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
          "more": "state",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "bla": "sdf",
          "yo": "dog",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "bla": "sdf",
        "yo": "dog",
      },
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "foo": "bar",
      "more": "state",
    },
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[null]}} - title 1`] = `"FIRST"`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"back","args":[null]}} - title 2`] = `"FIRST"`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"next","args":[{"bla":"sdf"}]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
          "more": "state",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "bla": "sdf",
          "yo": "dog",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "next",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "foo": "bar",
        "more": "state",
      },
      "type": "FIRST",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "bla": "sdf",
    "yo": "dog",
  },
  "type": "SECOND",
}
`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"next","args":[{"bla":"sdf"}]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"next","args":[{"bla":"sdf"}]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"next","args":[{"bla":"sdf"}]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
          "more": "state",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "bla": "sdf",
          "yo": "dog",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "next",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "foo": "bar",
        "more": "state",
      },
      "type": "FIRST",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "bla": "sdf",
      "yo": "dog",
    },
    "status": 200,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"next","args":[{"bla":"sdf"}]}} - title 1`] = `"SECOND"`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"next","args":[{"yo":"dog"}]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "yo": "dog",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "next",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "foo": "bar",
      },
      "type": "FIRST",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "yo": "dog",
  },
  "type": "SECOND",
}
`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"next","args":[{"yo":"dog"}]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"next","args":[{"yo":"dog"}]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"next","args":[{"yo":"dog"}]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "yo": "dog",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "next",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "foo": "bar",
      },
      "type": "FIRST",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "yo": "dog",
    },
    "status": 200,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(back/next()): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"next","args":[{"yo":"dog"}]}} - title 1`] = `"SECOND"`;

exports[`dispatch(jump(-2)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[-2,null,null,null]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "jump",
    "length": 3,
    "n": -1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(jump(-2)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[-2,null,null,null]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(jump(-2)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[-2,null,null,null]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(jump(-2)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[-2,null,null,null]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "jump",
    "length": 3,
    "n": -1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(jump(-2)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[-2,null,null,null]}} - title 1`] = `"FIRST"`;

exports[`dispatch(jump(n)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[-1,null,null,null]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(jump(n)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[-1,null,null,null]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(jump(n)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[-1,null,null,null]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(jump(n)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[-1,null,null,null]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(jump(n)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[-1,null,null,null]}} - title 1`] = `"FIRST"`;

exports[`dispatch(jump(n, byIndex === true, act)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[0,true,null,{"state":{"foo":"bar"}}]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "foo": "bar",
  },
  "type": "FIRST",
}
`;

exports[`dispatch(jump(n, byIndex === true, act)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[0,true,null,{"state":{"foo":"bar"}}]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(jump(n, byIndex === true, act)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[0,true,null,{"state":{"foo":"bar"}}]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(jump(n, byIndex === true, act)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[0,true,null,{"state":{"foo":"bar"}}]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "back",
    "length": 2,
    "n": -1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "foo": "bar",
    },
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(jump(n, byIndex === true, act)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[0,true,null,{"state":{"foo":"bar"}}]}} - title 1`] = `"FIRST"`;

exports[`dispatch(jump(n, byIndex === true, act)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[1,true,null,{"state":{"foo":"bar"}}]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "next",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "foo": "bar",
      },
      "type": "FIRST",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "foo": "bar",
  },
  "type": "SECOND",
}
`;

exports[`dispatch(jump(n, byIndex === true, act)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[1,true,null,{"state":{"foo":"bar"}}]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(jump(n, byIndex === true, act)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[1,true,null,{"state":{"foo":"bar"}}]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(jump(n, byIndex === true, act)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[1,true,null,{"state":{"foo":"bar"}}]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "next",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "foo": "bar",
      },
      "type": "FIRST",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "foo": "bar",
    },
    "status": 200,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(jump(n, byIndex === true, act)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[1,true,null,{"state":{"foo":"bar"}}]}} - title 1`] = `"SECOND"`;

exports[`dispatch(jump(n, byIndex, n, state)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[0,true,1,{"state":{"foo":"bar"}}]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "jump",
    "length": 3,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "foo": "bar",
  },
  "type": "FIRST",
}
`;

exports[`dispatch(jump(n, byIndex, n, state)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[0,true,1,{"state":{"foo":"bar"}}]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(jump(n, byIndex, n, state)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[0,true,1,{"state":{"foo":"bar"}}]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(jump(n, byIndex, n, state)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[0,true,1,{"state":{"foo":"bar"}}]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "jump",
    "length": 3,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "foo": "bar",
    },
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(jump(n, byIndex, n, state)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[0,true,1,{"state":{"foo":"bar"}}]}} - title 1`] = `"FIRST"`;

exports[`dispatch(jump(n, byIndex, n, state)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[2,true,-1,{"state":{"foo":"bar"}}]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "THIRD",
      },
    ],
    "from": null,
    "index": 2,
    "key": "345678",
    "kind": "jump",
    "length": 3,
    "n": -1,
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/third",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "foo": "bar",
  },
  "type": "THIRD",
}
`;

exports[`dispatch(jump(n, byIndex, n, state)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[2,true,-1,{"state":{"foo":"bar"}}]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(jump(n, byIndex, n, state)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[2,true,-1,{"state":{"foo":"bar"}}]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(jump(n, byIndex, n, state)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[2,true,-1,{"state":{"foo":"bar"}}]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "THIRD",
      },
    ],
    "from": null,
    "hash": "",
    "index": 2,
    "key": "345678",
    "kind": "jump",
    "length": 3,
    "n": -1,
    "params": Object {},
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "foo": "bar",
    },
    "status": 200,
    "type": "THIRD",
    "universal": false,
    "url": "/third",
  },
  "title": "THIRD",
}
`;

exports[`dispatch(jump(n, byIndex, n, state)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"jump","args":[2,true,-1,{"state":{"foo":"bar"}}]}} - title 1`] = `"THIRD"`;

exports[`dispatch(push/replace()) dispatch(push(path)): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "push",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "SECOND",
}
`;

exports[`dispatch(push/replace()) dispatch(push(path)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(push/replace()) dispatch(push(path)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(push/replace()) dispatch(push(path)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "push",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(push/replace()) dispatch(push(path)): 1 - title 1`] = `"SECOND"`;

exports[`dispatch(push/replace()) dispatch(push(path)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(push/replace()) dispatch(push(path)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(push/replace()) dispatch(push(path)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(push/replace()) dispatch(push(path)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(push/replace()) dispatch(push(path, state)): 2 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "push",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "foo": "bar",
  },
  "type": "SECOND",
}
`;

exports[`dispatch(push/replace()) dispatch(push(path, state)): 2 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(push/replace()) dispatch(push(path, state)): 2 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(push/replace()) dispatch(push(path, state)): 2 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "push",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "foo": "bar",
    },
    "status": 200,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(push/replace()) dispatch(push(path, state)): 2 - title 1`] = `"SECOND"`;

exports[`dispatch(push/replace()) dispatch(push(path, state)): firstRoute - /first - 2 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(push/replace()) dispatch(push(path, state)): firstRoute - /first - 2 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(push/replace()) dispatch(push(path, state)): firstRoute - /first - 2 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(push/replace()) dispatch(push(path, state)): firstRoute - /first - 2 - title 1`] = `"FIRST"`;

exports[`dispatch(push/replace()) dispatch(replace(path)): 3 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "index": 0,
    "key": "345678",
    "kind": "replace",
    "length": 1,
    "n": 1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 302,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "SECOND",
}
`;

exports[`dispatch(push/replace()) dispatch(replace(path)): 3 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(push/replace()) dispatch(replace(path)): 3 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(push/replace()) dispatch(replace(path)): 3 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "replace",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 302,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(push/replace()) dispatch(replace(path)): 3 - title 1`] = `"SECOND"`;

exports[`dispatch(push/replace()) dispatch(replace(path)): firstRoute - /first - 3 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(push/replace()) dispatch(replace(path)): firstRoute - /first - 3 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(push/replace()) dispatch(replace(path)): firstRoute - /first - 3 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(push/replace()) dispatch(replace(path)): firstRoute - /first - 3 - title 1`] = `"FIRST"`;

exports[`dispatch(push/replace()) dispatch(replace(path, state)): 4 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "SECOND",
      },
    ],
    "from": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "index": 0,
    "key": "345678",
    "kind": "replace",
    "length": 1,
    "n": 1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 302,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "foo": "bar",
  },
  "type": "SECOND",
}
`;

exports[`dispatch(push/replace()) dispatch(replace(path, state)): 4 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(push/replace()) dispatch(replace(path, state)): 4 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(push/replace()) dispatch(replace(path, state)): 4 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "SECOND",
      },
    ],
    "from": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "replace",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "foo": "bar",
    },
    "status": 302,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(push/replace()) dispatch(replace(path, state)): 4 - title 1`] = `"SECOND"`;

exports[`dispatch(push/replace()) dispatch(replace(path, state)): firstRoute - /first - 4 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(push/replace()) dispatch(replace(path, state)): firstRoute - /first - 4 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(push/replace()) dispatch(replace(path, state)): firstRoute - /first - 4 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(push/replace()) dispatch(replace(path, state)): firstRoute - /first - 4 - title 1`] = `"FIRST"`;

exports[`dispatch(reset(actions)) - entries as action objects: 1 - response 1`] = `
Object {
  "basename": "base-name",
  "hash": "something",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "bla": "sdf",
        },
        "type": "SECOND",
      },
      Object {
        "basename": "base-name",
        "hash": "something",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "foo=bar&baz=yo",
          "url": "/base-name/third?foo=bar&baz=yo#something",
        },
        "params": Object {},
        "query": Object {
          "baz": "yo",
          "foo": "bar",
        },
        "state": Object {
          "abc": "def",
        },
        "type": "THIRD",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "bla": "sdf",
      },
      "type": "SECOND",
    },
    "scene": "",
    "search": "foo=bar&baz=yo",
    "status": 200,
    "url": "/base-name/third?foo=bar&baz=yo#something",
  },
  "params": Object {},
  "query": Object {
    "baz": "yo",
    "foo": "bar",
  },
  "state": Object {
    "abc": "def",
  },
  "type": "THIRD",
}
`;

exports[`dispatch(reset(actions)) - entries as action objects: 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(reset(actions)) - entries as action objects: 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(reset(actions)) - entries as action objects: 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "base-name",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "bla": "sdf",
        },
        "type": "SECOND",
      },
      Object {
        "basename": "base-name",
        "hash": "something",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "foo=bar&baz=yo",
          "url": "/base-name/third?foo=bar&baz=yo#something",
        },
        "params": Object {},
        "query": Object {
          "baz": "yo",
          "foo": "bar",
        },
        "state": Object {
          "abc": "def",
        },
        "type": "THIRD",
      },
    ],
    "from": null,
    "hash": "something",
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "bla": "sdf",
      },
      "type": "SECOND",
    },
    "query": Object {
      "baz": "yo",
      "foo": "bar",
    },
    "scene": "",
    "search": "foo=bar&baz=yo",
    "state": Object {
      "abc": "def",
    },
    "status": 200,
    "type": "THIRD",
    "universal": false,
    "url": "/base-name/third?foo=bar&baz=yo#something",
  },
  "title": "THIRD",
}
`;

exports[`dispatch(reset(actions)) - entries as action objects: 1 - title 1`] = `"THIRD"`;

exports[`dispatch(reset(actions)) - entries as action objects: firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(reset(actions)) - entries as action objects: firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(reset(actions)) - entries as action objects: firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(reset(actions)) - entries as action objects: firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(reset(actions)) - entries as arrays [url, state]: 1 - response 1`] = `
Object {
  "basename": "base-name",
  "hash": "something",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "bla": "sdf",
        },
        "type": "SECOND",
      },
      Object {
        "basename": "base-name",
        "hash": "something",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "foo=bar&baz=yo",
          "url": "/base-name/third?foo=bar&baz=yo#something",
        },
        "params": Object {},
        "query": Object {
          "baz": "yo",
          "foo": "bar",
        },
        "state": Object {
          "abc": "def",
        },
        "type": "THIRD",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "bla": "sdf",
      },
      "type": "SECOND",
    },
    "scene": "",
    "search": "foo=bar&baz=yo",
    "status": 200,
    "url": "/base-name/third?foo=bar&baz=yo#something",
  },
  "params": Object {},
  "query": Object {
    "baz": "yo",
    "foo": "bar",
  },
  "state": Object {
    "abc": "def",
  },
  "type": "THIRD",
}
`;

exports[`dispatch(reset(actions)) - entries as arrays [url, state]: 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(reset(actions)) - entries as arrays [url, state]: 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(reset(actions)) - entries as arrays [url, state]: 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "base-name",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "bla": "sdf",
        },
        "type": "SECOND",
      },
      Object {
        "basename": "base-name",
        "hash": "something",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "foo=bar&baz=yo",
          "url": "/base-name/third?foo=bar&baz=yo#something",
        },
        "params": Object {},
        "query": Object {
          "baz": "yo",
          "foo": "bar",
        },
        "state": Object {
          "abc": "def",
        },
        "type": "THIRD",
      },
    ],
    "from": null,
    "hash": "something",
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "bla": "sdf",
      },
      "type": "SECOND",
    },
    "query": Object {
      "baz": "yo",
      "foo": "bar",
    },
    "scene": "",
    "search": "foo=bar&baz=yo",
    "state": Object {
      "abc": "def",
    },
    "status": 200,
    "type": "THIRD",
    "universal": false,
    "url": "/base-name/third?foo=bar&baz=yo#something",
  },
  "title": "THIRD",
}
`;

exports[`dispatch(reset(actions)) - entries as arrays [url, state]: 1 - title 1`] = `"THIRD"`;

exports[`dispatch(reset(actions)) - entries as arrays [url, state]: firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(reset(actions)) - entries as arrays [url, state]: firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(reset(actions)) - entries as arrays [url, state]: firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(reset(actions)) - entries as arrays [url, state]: firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(reset(entries)) - last element inferred, n 1 inferred: 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/third",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "THIRD",
}
`;

exports[`dispatch(reset(entries)) - last element inferred, n 1 inferred: 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(reset(entries)) - last element inferred, n 1 inferred: 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(reset(entries)) - last element inferred, n 1 inferred: 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "THIRD",
    "universal": false,
    "url": "/third",
  },
  "title": "THIRD",
}
`;

exports[`dispatch(reset(entries)) - last element inferred, n 1 inferred: 1 - title 1`] = `"THIRD"`;

exports[`dispatch(reset(entries)) - last element inferred, n 1 inferred: firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(reset(entries)) - last element inferred, n 1 inferred: firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(reset(entries)) - last element inferred, n 1 inferred: firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(reset(entries)) - last element inferred, n 1 inferred: firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(reset(entries, index)) - load kind inferred (because only one entry): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/not-found",
          "scene": "",
          "search": "",
          "url": "/not-found",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "NOT_FOUND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/not-found",
        "scene": "",
        "search": "",
        "url": "/not-found",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "NOT_FOUND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "SECOND",
}
`;

exports[`dispatch(reset(entries, index)) - load kind inferred (because only one entry): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(reset(entries, index)) - load kind inferred (because only one entry): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(reset(entries, index)) - load kind inferred (because only one entry): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/not-found",
          "scene": "",
          "search": "",
          "url": "/not-found",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "NOT_FOUND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/not-found",
        "scene": "",
        "search": "",
        "url": "/not-found",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "NOT_FOUND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(reset(entries, index)) - load kind inferred (because only one entry): 1 - title 1`] = `"SECOND"`;

exports[`dispatch(reset(entries, index)) - load kind inferred (because only one entry): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(reset(entries, index)) - load kind inferred (because only one entry): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(reset(entries, index)) - load kind inferred (because only one entry): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(reset(entries, index)) - load kind inferred (because only one entry): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(reset(entries, index)) - n -1 inferred: {"type":"@@rudy/CALL_HISTORY","payload":{"method":"reset","args":[["/second","/third"],0,null]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": -1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/third",
        "scene": "",
        "search": "",
        "url": "/third",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "THIRD",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "SECOND",
}
`;

exports[`dispatch(reset(entries, index)) - n -1 inferred: {"type":"@@rudy/CALL_HISTORY","payload":{"method":"reset","args":[["/second","/third"],0,null]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(reset(entries, index)) - n -1 inferred: {"type":"@@rudy/CALL_HISTORY","payload":{"method":"reset","args":[["/second","/third"],0,null]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(reset(entries, index)) - n -1 inferred: {"type":"@@rudy/CALL_HISTORY","payload":{"method":"reset","args":[["/second","/third"],0,null]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": -1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/third",
        "scene": "",
        "search": "",
        "url": "/third",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "THIRD",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(reset(entries, index)) - n -1 inferred: {"type":"@@rudy/CALL_HISTORY","payload":{"method":"reset","args":[["/second","/third"],0,null]}} - title 1`] = `"SECOND"`;

exports[`dispatch(reset(entries, index)) - n 1 inferred because > than current index: {"type":"@@rudy/CALL_HISTORY","payload":{"method":"reset","args":[["/fourth","/second","/third","/first"],2,null]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/fourth",
          "scene": "",
          "search": "",
          "url": "/fourth",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FOURTH",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 2,
    "key": "345678",
    "kind": "reset",
    "length": 4,
    "n": 1,
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/third",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "THIRD",
}
`;

exports[`dispatch(reset(entries, index)) - n 1 inferred because > than current index: {"type":"@@rudy/CALL_HISTORY","payload":{"method":"reset","args":[["/fourth","/second","/third","/first"],2,null]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(reset(entries, index)) - n 1 inferred because > than current index: {"type":"@@rudy/CALL_HISTORY","payload":{"method":"reset","args":[["/fourth","/second","/third","/first"],2,null]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(reset(entries, index)) - n 1 inferred because > than current index: {"type":"@@rudy/CALL_HISTORY","payload":{"method":"reset","args":[["/fourth","/second","/third","/first"],2,null]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/fourth",
          "scene": "",
          "search": "",
          "url": "/fourth",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FOURTH",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 2,
    "key": "345678",
    "kind": "reset",
    "length": 4,
    "n": 1,
    "params": Object {},
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 1,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "THIRD",
    "universal": false,
    "url": "/third",
  },
  "title": "THIRD",
}
`;

exports[`dispatch(reset(entries, index)) - n 1 inferred because > than current index: {"type":"@@rudy/CALL_HISTORY","payload":{"method":"reset","args":[["/fourth","/second","/third","/first"],2,null]}} - title 1`] = `"THIRD"`;

exports[`dispatch(reset(entries, index)) - n 1 inferred): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/third",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "THIRD",
}
`;

exports[`dispatch(reset(entries, index)) - n 1 inferred): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(reset(entries, index)) - n 1 inferred): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(reset(entries, index)) - n 1 inferred): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "THIRD",
    "universal": false,
    "url": "/third",
  },
  "title": "THIRD",
}
`;

exports[`dispatch(reset(entries, index)) - n 1 inferred): 1 - title 1`] = `"THIRD"`;

exports[`dispatch(reset(entries, index)) - n 1 inferred): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(reset(entries, index)) - n 1 inferred): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(reset(entries, index)) - n 1 inferred): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(reset(entries, index)) - n 1 inferred): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(reset(entries, index)) - redirect kind inferred (because prev and current index is the same): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "index": 0,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 302,
    "url": "/second",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "SECOND",
}
`;

exports[`dispatch(reset(entries, index)) - redirect kind inferred (because prev and current index is the same): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(reset(entries, index)) - redirect kind inferred (because prev and current index is the same): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(reset(entries, index)) - redirect kind inferred (because prev and current index is the same): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
    ],
    "from": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "reset",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 302,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(reset(entries, index)) - redirect kind inferred (because prev and current index is the same): 1 - title 1`] = `"SECOND"`;

exports[`dispatch(reset(entries, index)) - redirect kind inferred (because prev and current index is the same): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(reset(entries, index)) - redirect kind inferred (because prev and current index is the same): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(reset(entries, index)) - redirect kind inferred (because prev and current index is the same): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(reset(entries, index)) - redirect kind inferred (because prev and current index is the same): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(reset(entries, index, n)) - n -1 faked): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/fourth",
          "scene": "",
          "search": "",
          "url": "/fourth",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FOURTH",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 3,
    "n": -1,
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 2,
        "key": "345678",
        "pathname": "/fourth",
        "scene": "",
        "search": "",
        "url": "/fourth",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FOURTH",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/third",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "THIRD",
}
`;

exports[`dispatch(reset(entries, index, n)) - n -1 faked): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(reset(entries, index, n)) - n -1 faked): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(reset(entries, index, n)) - n -1 faked): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "backward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/fourth",
          "scene": "",
          "search": "",
          "url": "/fourth",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FOURTH",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 3,
    "n": -1,
    "params": Object {},
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 2,
        "key": "345678",
        "pathname": "/fourth",
        "scene": "",
        "search": "",
        "url": "/fourth",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FOURTH",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "THIRD",
    "universal": false,
    "url": "/third",
  },
  "title": "THIRD",
}
`;

exports[`dispatch(reset(entries, index, n)) - n -1 faked): 1 - title 1`] = `"THIRD"`;

exports[`dispatch(reset(entries, index, n)) - n -1 faked): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(reset(entries, index, n)) - n -1 faked): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(reset(entries, index, n)) - n -1 faked): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(reset(entries, index, n)) - n -1 faked): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(reset(entries, index, n)) - n 1 faked): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/fourth",
          "scene": "",
          "search": "",
          "url": "/fourth",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FOURTH",
      },
    ],
    "from": null,
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 3,
    "n": 1,
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/third",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "THIRD",
}
`;

exports[`dispatch(reset(entries, index, n)) - n 1 faked): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(reset(entries, index, n)) - n 1 faked): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(reset(entries, index, n)) - n 1 faked): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/third",
          "scene": "",
          "search": "",
          "url": "/third",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "THIRD",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/fourth",
          "scene": "",
          "search": "",
          "url": "/fourth",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FOURTH",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "reset",
    "length": 3,
    "n": 1,
    "params": Object {},
    "pathname": "/third",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/second",
        "scene": "",
        "search": "",
        "url": "/second",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "SECOND",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "THIRD",
    "universal": false,
    "url": "/third",
  },
  "title": "THIRD",
}
`;

exports[`dispatch(reset(entries, index, n)) - n 1 faked): 1 - title 1`] = `"THIRD"`;

exports[`dispatch(reset(entries, index, n)) - n 1 faked): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(reset(entries, index, n)) - n 1 faked): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(reset(entries, index, n)) - n 1 faked): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(reset(entries, index, n)) - n 1 faked): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(set()) dispatch(set(action)): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "yolo",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "yolo",
        "location": Object {
          "key": "345678",
          "pathname": "/first/bar",
          "scene": "",
          "search": "",
          "url": "/first/bar#yolo",
        },
        "params": Object {
          "foo": "bar",
        },
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first/bar",
    "scene": "",
    "search": "",
    "url": "/first/bar#yolo",
  },
  "params": Object {
    "foo": "bar",
  },
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(set()) dispatch(set(action)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(set()) dispatch(set(action)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(set()) dispatch(set(action)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "yolo",
        "location": Object {
          "key": "345678",
          "pathname": "/first/bar",
          "scene": "",
          "search": "",
          "url": "/first/bar#yolo",
        },
        "params": Object {
          "foo": "bar",
        },
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "yolo",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {
      "foo": "bar",
    },
    "pathname": "/first/bar",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first/bar#yolo",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(set()) dispatch(set(action)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(set()) dispatch(set(action)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(set()) dispatch(set(action)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(set()) dispatch(set(action)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(set()) dispatch(set(action)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(set()) dispatch(set(action, index, byIndex === true)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"basename":"/bar"},0,true]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "bar",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/bar/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "index": 1,
    "key": "345678",
    "kind": "set",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "scene": "",
    "search": "",
    "url": "/second",
  },
  "params": Object {},
  "prev": Object {
    "basename": "bar",
    "hash": "",
    "location": Object {
      "index": 0,
      "key": "345678",
      "pathname": "/first",
      "scene": "",
      "search": "",
      "url": "/bar/first",
    },
    "params": Object {},
    "query": Object {},
    "state": Object {},
    "type": "FIRST",
  },
  "query": Object {},
  "state": Object {},
  "type": "SECOND",
}
`;

exports[`dispatch(set()) dispatch(set(action, index, byIndex === true)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"basename":"/bar"},0,true]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(set()) dispatch(set(action, index, byIndex === true)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"basename":"/bar"},0,true]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(set()) dispatch(set(action, index, byIndex === true)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"basename":"/bar"},0,true]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "bar",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/bar/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "push",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "bar",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/bar/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(set()) dispatch(set(action, index, byIndex === true)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"basename":"/bar"},0,true]}} - title 1`] = `"SECOND"`;

exports[`dispatch(set()) dispatch(set(action, keyString)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"hash":"bar"},"345678",null]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "bar",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first#bar",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "index": 1,
    "key": "345678",
    "kind": "set",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "scene": "",
    "search": "",
    "url": "/second",
  },
  "params": Object {},
  "prev": Object {
    "basename": "",
    "hash": "bar",
    "location": Object {
      "index": 0,
      "key": "345678",
      "pathname": "/first",
      "scene": "",
      "search": "",
      "url": "/first#bar",
    },
    "params": Object {},
    "query": Object {},
    "state": Object {},
    "type": "FIRST",
  },
  "query": Object {},
  "state": Object {},
  "type": "SECOND",
}
`;

exports[`dispatch(set()) dispatch(set(action, keyString)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"hash":"bar"},"345678",null]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(set()) dispatch(set(action, keyString)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"hash":"bar"},"345678",null]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(set()) dispatch(set(action, keyString)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"hash":"bar"},"345678",null]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "bar",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first#bar",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "push",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "bar",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first#bar",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "FIRST",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(set()) dispatch(set(action, keyString)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"hash":"bar"},"345678",null]}} - title 1`] = `"SECOND"`;

exports[`dispatch(set()) dispatch(set(action, n)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"state":{"foo":"bar"}},-1,null]}} - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "index": 1,
    "key": "345678",
    "kind": "set",
    "length": 2,
    "n": 1,
    "pathname": "/second",
    "scene": "",
    "search": "",
    "url": "/second",
  },
  "params": Object {},
  "prev": Object {
    "basename": "",
    "hash": "",
    "location": Object {
      "index": 0,
      "key": "345678",
      "pathname": "/first",
      "scene": "",
      "search": "",
      "url": "/first",
    },
    "params": Object {},
    "query": Object {},
    "state": Object {
      "foo": "bar",
    },
    "type": "FIRST",
  },
  "query": Object {},
  "state": Object {},
  "type": "SECOND",
}
`;

exports[`dispatch(set()) dispatch(set(action, n)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"state":{"foo":"bar"}},-1,null]}} - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(set()) dispatch(set(action, n)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"state":{"foo":"bar"}},-1,null]}} - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(set()) dispatch(set(action, n)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"state":{"foo":"bar"}},-1,null]}} - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/second",
          "scene": "",
          "search": "",
          "url": "/second",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "SECOND",
      },
    ],
    "from": null,
    "hash": "",
    "index": 1,
    "key": "345678",
    "kind": "push",
    "length": 2,
    "n": 1,
    "params": Object {},
    "pathname": "/second",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": 0,
        "key": "345678",
        "pathname": "/first",
        "scene": "",
        "search": "",
        "url": "/first",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {
        "foo": "bar",
      },
      "type": "FIRST",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "SECOND",
    "universal": false,
    "url": "/second",
  },
  "title": "SECOND",
}
`;

exports[`dispatch(set()) dispatch(set(action, n)): {"type":"@@rudy/CALL_HISTORY","payload":{"method":"set","args":[{"state":{"foo":"bar"}},-1,null]}} - title 1`] = `"SECOND"`;

exports[`dispatch(set()) dispatch(set(func)): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "yolo",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "yolo",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "foo=bar",
          "url": "/first?foo=bar#yolo",
        },
        "params": Object {},
        "query": Object {
          "foo": "bar",
        },
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "scene": "",
    "search": "foo=bar",
    "url": "/first?foo=bar#yolo",
  },
  "params": Object {},
  "query": Object {
    "foo": "bar",
  },
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(set()) dispatch(set(func)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(set()) dispatch(set(func)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(set()) dispatch(set(func)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "yolo",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "foo=bar",
          "url": "/first?foo=bar#yolo",
        },
        "params": Object {},
        "query": Object {
          "foo": "bar",
        },
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "yolo",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {
      "foo": "bar",
    },
    "scene": "",
    "search": "foo=bar",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first?foo=bar#yolo",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(set()) dispatch(set(func)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(set()) dispatch(set(func)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(set()) dispatch(set(func)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(set()) dispatch(set(func)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(set()) dispatch(set(func)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setBasename()) dispatch(setBasename(basename)): 1 - response 1`] = `
Object {
  "basename": "new-basename",
  "hash": "",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "new-basename",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/new-basename/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "scene": "",
    "search": "",
    "url": "/new-basename/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setBasename()) dispatch(setBasename(basename)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(setBasename()) dispatch(setBasename(basename)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(setBasename()) dispatch(setBasename(basename)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "new-basename",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "new-basename",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/new-basename/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/new-basename/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setBasename()) dispatch(setBasename(basename)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setBasename()) dispatch(setBasename(basename)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(setBasename()) dispatch(setBasename(basename)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setBasename()) dispatch(setBasename(basename)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setBasename()) dispatch(setBasename(basename)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setBasename()) dispatch(setBasename(func)): 1 - response 1`] = `
Object {
  "basename": "new-basename",
  "hash": "",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "new-basename",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/new-basename/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "scene": "",
    "search": "",
    "url": "/new-basename/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setBasename()) dispatch(setBasename(func)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(setBasename()) dispatch(setBasename(func)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(setBasename()) dispatch(setBasename(func)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "new-basename",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "new-basename",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/new-basename/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/new-basename/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setBasename()) dispatch(setBasename(func)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setBasename()) dispatch(setBasename(func)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(setBasename()) dispatch(setBasename(func)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setBasename()) dispatch(setBasename(func)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setBasename()) dispatch(setBasename(func)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setHash()) dispatch(setHash(func)): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "new-hash",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "new-hash",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first#new-hash",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "scene": "",
    "search": "",
    "url": "/first#new-hash",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setHash()) dispatch(setHash(func)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(setHash()) dispatch(setHash(func)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(setHash()) dispatch(setHash(func)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "new-hash",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first#new-hash",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "new-hash",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first#new-hash",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setHash()) dispatch(setHash(func)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setHash()) dispatch(setHash(func)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(setHash()) dispatch(setHash(func)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setHash()) dispatch(setHash(func)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setHash()) dispatch(setHash(func)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setHash()) dispatch(setHash(setHash)): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "new-hash",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "new-hash",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first#new-hash",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "scene": "",
    "search": "",
    "url": "/first#new-hash",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setHash()) dispatch(setHash(setHash)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(setHash()) dispatch(setHash(setHash)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(setHash()) dispatch(setHash(setHash)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "new-hash",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first#new-hash",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "new-hash",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first#new-hash",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setHash()) dispatch(setHash(setHash)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setHash()) dispatch(setHash(setHash)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(setHash()) dispatch(setHash(setHash)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setHash()) dispatch(setHash(setHash)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setHash()) dispatch(setHash(setHash)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setParams()) dispatch(setParams(func)): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first/bar",
          "scene": "",
          "search": "",
          "url": "/first/bar",
        },
        "params": Object {
          "foo": "bar",
        },
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first/bar",
    "scene": "",
    "search": "",
    "url": "/first/bar",
  },
  "params": Object {
    "foo": "bar",
  },
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setParams()) dispatch(setParams(func)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(setParams()) dispatch(setParams(func)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(setParams()) dispatch(setParams(func)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first/bar",
          "scene": "",
          "search": "",
          "url": "/first/bar",
        },
        "params": Object {
          "foo": "bar",
        },
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {
      "foo": "bar",
    },
    "pathname": "/first/bar",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first/bar",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setParams()) dispatch(setParams(func)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setParams()) dispatch(setParams(func)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(setParams()) dispatch(setParams(func)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setParams()) dispatch(setParams(func)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setParams()) dispatch(setParams(func)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setParams()) dispatch(setParams(params)): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first/bar",
          "scene": "",
          "search": "",
          "url": "/first/bar",
        },
        "params": Object {
          "foo": "bar",
        },
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first/bar",
    "scene": "",
    "search": "",
    "url": "/first/bar",
  },
  "params": Object {
    "foo": "bar",
  },
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setParams()) dispatch(setParams(params)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(setParams()) dispatch(setParams(params)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(setParams()) dispatch(setParams(params)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first/bar",
          "scene": "",
          "search": "",
          "url": "/first/bar",
        },
        "params": Object {
          "foo": "bar",
        },
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {
      "foo": "bar",
    },
    "pathname": "/first/bar",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first/bar",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setParams()) dispatch(setParams(params)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setParams()) dispatch(setParams(params)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(setParams()) dispatch(setParams(params)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setParams()) dispatch(setParams(params)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setParams()) dispatch(setParams(params)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setQuery()) dispatch(setQuery(func)): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "foo=bar",
          "url": "/first?foo=bar",
        },
        "params": Object {},
        "query": Object {
          "foo": "bar",
        },
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "scene": "",
    "search": "foo=bar",
    "url": "/first?foo=bar",
  },
  "params": Object {},
  "query": Object {
    "foo": "bar",
  },
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setQuery()) dispatch(setQuery(func)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(setQuery()) dispatch(setQuery(func)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(setQuery()) dispatch(setQuery(func)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "foo=bar",
          "url": "/first?foo=bar",
        },
        "params": Object {},
        "query": Object {
          "foo": "bar",
        },
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {
      "foo": "bar",
    },
    "scene": "",
    "search": "foo=bar",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first?foo=bar",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setQuery()) dispatch(setQuery(func)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setQuery()) dispatch(setQuery(func)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(setQuery()) dispatch(setQuery(func)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setQuery()) dispatch(setQuery(func)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setQuery()) dispatch(setQuery(func)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setQuery()) dispatch(setQuery(query)): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "foo=bar",
          "url": "/first?foo=bar",
        },
        "params": Object {},
        "query": Object {
          "foo": "bar",
        },
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "scene": "",
    "search": "foo=bar",
    "url": "/first?foo=bar",
  },
  "params": Object {},
  "query": Object {
    "foo": "bar",
  },
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setQuery()) dispatch(setQuery(query)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(setQuery()) dispatch(setQuery(query)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(setQuery()) dispatch(setQuery(query)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "foo=bar",
          "url": "/first?foo=bar",
        },
        "params": Object {},
        "query": Object {
          "foo": "bar",
        },
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {
      "foo": "bar",
    },
    "scene": "",
    "search": "foo=bar",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first?foo=bar",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setQuery()) dispatch(setQuery(query)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setQuery()) dispatch(setQuery(query)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(setQuery()) dispatch(setQuery(query)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setQuery()) dispatch(setQuery(query)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setQuery()) dispatch(setQuery(query)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setState()) dispatch(setState(func)): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "scene": "",
    "search": "",
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "foo": "bar",
  },
  "type": "FIRST",
}
`;

exports[`dispatch(setState()) dispatch(setState(func)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(setState()) dispatch(setState(func)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(setState()) dispatch(setState(func)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "foo": "bar",
    },
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setState()) dispatch(setState(func)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setState()) dispatch(setState(func)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(setState()) dispatch(setState(func)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setState()) dispatch(setState(func)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setState()) dispatch(setState(func)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setState()) dispatch(setState(state)): 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
    ],
    "index": 0,
    "key": "345678",
    "kind": "set",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "scene": "",
    "search": "",
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {
    "foo": "bar",
  },
  "type": "FIRST",
}
`;

exports[`dispatch(setState()) dispatch(setState(state)): 1 - routes - NEVER_USED_PATHLESS - thunk 1`] = `0`;

exports[`dispatch(setState()) dispatch(setState(state)): 1 - routes - REDIRECTED - onComplete 1`] = `0`;

exports[`dispatch(setState()) dispatch(setState(state)): 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {
          "foo": "bar",
        },
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {
      "foo": "bar",
    },
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setState()) dispatch(setState(state)): 1 - title 1`] = `"FIRST"`;

exports[`dispatch(setState()) dispatch(setState(state)): firstRoute - /first - 1 - initial_state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "init",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "<initial_title>",
}
`;

exports[`dispatch(setState()) dispatch(setState(state)): firstRoute - /first - 1 - response 1`] = `
Object {
  "basename": "",
  "hash": "",
  "location": Object {
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "scene": "",
    "search": "",
    "status": 200,
    "url": "/first",
  },
  "params": Object {},
  "query": Object {},
  "state": Object {},
  "type": "FIRST",
}
`;

exports[`dispatch(setState()) dispatch(setState(state)): firstRoute - /first - 1 - state 1`] = `
Object {
  "location": Object {
    "basename": "",
    "blocked": null,
    "direction": "forward",
    "entries": Array [
      Object {
        "basename": "",
        "hash": "",
        "location": Object {
          "key": "345678",
          "pathname": "/first",
          "scene": "",
          "search": "",
          "url": "/first",
        },
        "params": Object {},
        "query": Object {},
        "state": Object {},
        "type": "FIRST",
      },
    ],
    "from": null,
    "hash": "",
    "index": 0,
    "key": "345678",
    "kind": "load",
    "length": 1,
    "n": 1,
    "params": Object {},
    "pathname": "/first",
    "pop": false,
    "prev": Object {
      "basename": "",
      "hash": "",
      "location": Object {
        "index": -1,
        "key": "",
        "pathname": "",
        "scene": "",
        "search": "",
        "url": "",
      },
      "params": Object {},
      "query": Object {},
      "state": Object {},
      "type": "",
    },
    "query": Object {},
    "scene": "",
    "search": "",
    "state": Object {},
    "status": 200,
    "type": "FIRST",
    "universal": false,
    "url": "/first",
  },
  "title": "FIRST",
}
`;

exports[`dispatch(setState()) dispatch(setState(state)): firstRoute - /first - 1 - title 1`] = `"FIRST"`;
